[{"path": "random_walk.py", "name": "Simulate a random walk", "docMarkdown": "Use random numbers to simulate a two-dimensional random walk.\n\n_Based on a demonstration by Zoltan Kovacs._"}, {"path": "dynamic_triangle_area.py", "name": "Calculate area as a triangle's vertices are dragged", "docMarkdown": "Write a Python function which is called when a GeoGebra point is dragged\naround the plane."}, {"path": "exponential_growth.py", "name": "Exponential growth", "docMarkdown": "See how quickly a number grows if you keep doubling it."}, {"path": "circles_and_points.py", "name": "Draw some circles and some points", "docMarkdown": "This example shows how you can draw *circles* and *points* using the\n`Circle` and `Point` functions."}, {"path": "get_set_properties.py", "name": "Set and get properties of a point", "docMarkdown": "Work with properties (like coordinates and colors) of a `Point` in the\nstandard Python style."}, {"path": "string_art.py", "name": "Simulate elastic string art", "docMarkdown": "Draw a simulation of art patterns made by connecting rows of nails with\nstring, with the bonus of being able to move the corner nails around as\nthe art is being made.\n\nBased on a demonstration by Zoltan Kovacs."}, {"path": "draw_slowly.py", "name": "Draw concentric circles slowly", "docMarkdown": "Use Python's `time` module to pause between drawing circles."}, {"path": "line_through_points.py", "name": "Line through two points", "docMarkdown": "Define two points, and construct the line joining them."}, {"path": "intersect_line_parabola.py", "name": "Intersect a line and a parabola", "docMarkdown": "Create a parabola which can be adjusted using a slider, and find its\nintersection with a fixed line."}, {"path": "regression.py", "name": "Linear and quadratic regression", "docMarkdown": "**Does not work yet**\n\nCreate some points and find the line, and separately parabola, which\nbest fit the points."}]
